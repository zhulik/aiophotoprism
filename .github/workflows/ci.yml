---
name: Continuous Integration

on: [push, pull_request]

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checking out code from GitHub
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pipenv setuptools wheel
          pipenv sync --dev
      - name: Run pre-commit on all files
        run: |
          make lint
  test:
    name: Python ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu]
        python: [3.7, 3.8, 3.9]
    steps:
      - name: Checking out code from GitHub
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pipenv setuptools wheel
          pipenv sync --dev
      - name: Pytest with coverage reporting
        run: make test
  publish:
    name: Publish a Python distribution to PyPI
    runs-on: ubuntu-latest
    needs: [linting, test]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - name: Checking out code from GitHub
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pipenv setuptools wheel
          pipenv sync --dev
      - name: Build the package
        run: python setup.py sdist bdist_wheel
      - name: Publish the package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
